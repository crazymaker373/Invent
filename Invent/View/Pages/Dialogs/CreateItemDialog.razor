@using Model.Entities
@using Domain.Repositories
@using Model.Configurations
@inject IItemRepository _itemRepository
@inject NavigationManager _navigationManager
@inject StorageDbContext _context

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h5">Create Item</MudText>
    </DialogContent>
    <DialogActions>
        <EditForm Model="@NewItem" OnValidSubmit="OnValidSubmit" class="container-fluid">
            <DataAnnotationsValidator/>
            <MudGrid>
                <MudItem>
                    <MudCard>
                        <MudCardContent>
                            <MudTextField Label="Name"
                                          @bind-Value="NewItem.Name" For="@(() => NewItem.Name)"/>
                            <MudTextField Label="Description" Class="mt-3"
                                          @bind-Value="NewItem.Description" For="@(() => NewItem.Description)"/>
                            <MudTextField Label="Code" Class="mt-3"
                                          @bind-Value="NewItem.Code" For="@(() => NewItem.Code)"/>
                            <MudSelect T="EItemType" Label="Itemtype" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter" For="@(() => NewItem.ItemType)">
                                <MudSelectItem Value="@EItemType.OTHER"/>
                                <MudSelectItem Value="@EItemType.TOOL"/>
                            </MudSelect>
                            <MudSelect T="Location" Label="Location" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter" For="@(() => NewItem.Location)">
                                @foreach (var location in _context.Set<Location>().ToList()) {
                                    //TODO: Locations
                                }
                            </MudSelect>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton OnClick="Cancel">Cancel</MudButton>
                            <MudButton ButtonType="ButtonType.Submit" OnClick="Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Create</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    public Item NewItem { get; set; } = new ();
    bool success;

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();


    private void OnValidSubmit(EditContext context) {
        success = true;
        NewItem.LocationId = 1;
        _itemRepository.CreateAsync(NewItem);
        Submit();
        _navigationManager.NavigateTo(_navigationManager.Uri, forceLoad: true);
    }

}