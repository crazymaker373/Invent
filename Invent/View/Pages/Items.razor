@page "/{id:int}/items"
@page "/{id:int}/{locationId:int}/items"
@inherits SidebarComponent
@inject IItemRepository ItemRepository
@inject ILocationRepository LocationRepository

<PageTitle>Items</PageTitle>

<h3>Items</h3>

<DataInit Data="ItemList">
    <ChildContent Context="itemList">
        <ItemsComponent ItemList="itemList" InventoryId="Id" Location="Location"/>
    </ChildContent>
</DataInit>


@code {

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public int LocationId { get; set; }

    private List<Item> ItemList { get; set; } = new ();

    Location? Location { get; set; }

    protected override async Task OnParametersSetAsync() {
        if (LocationId is not 0) {
            Location = await LocationRepository.ReadAsync(LocationId);
            ItemList = await ItemRepository.ReadByLocationAsync(LocationId);
        }
        else {
            ItemList = await ItemRepository.ReadGraphAsync(Id);
            Location = null;
        }
    }

    protected override async Task OnInitializedAsync() {
        SidebarItems.Add(new SidebarItem {
            Name = "Locations",
            Link = $"{Id}/locations"
        });
        SidebarItems.Add(new SidebarItem {
            Name = "Items",
            Link = $"{Id}/items"
        });
        
        await base.OnInitializedAsync();
    }

}